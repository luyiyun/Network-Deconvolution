% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ND_regulatory.R
\name{ND_regulatory}
\alias{ND_regulatory}
\title{Network deconvolution for gene regulatory networks of DREAM5}
\usage{
ND_regulatory(
  mat,
  beta = 0.5,
  alpha = 0.1,
  linear_mapping_before = TRUE,
  linear_mapping_after = TRUE,
  control_p = FALSE
)
}
\arguments{
\item{mat}{Input matrix, it is a n_tf by n matrix where first n_tf genes are TFs.
Elements of the input matrix are nonnegative.}

\item{beta}{Scaling parameter, the program maps the largest absolute eigenvalue of the direct dependency matrix to beta. It should be
between 0 and 1. You should skip this scaling step if you know eigenvalues of your matrix satisfy ND conditions.}

\item{alpha}{fraction of edges of the observed dependency matrix to be kept in deconvolution process.}

\item{linear_mapping_before}{If TRUE, mat will be linearly mapped to be between 0 and 1 before deconvolution.}

\item{linear_mapping_after}{If TRUE, result will be linearly mapped to be between 0 and 1 after deconvolution.}

\item{control_p}{If set to TRUE, it perturbs input networks slightly to have stable results in case of non-diagonalizable matrices.
If FALSE, it checks some sufficient condition and then add a small perturbation (this may be slower). Default is FALSE.}
}
\value{
mat_nd, Output deconvolved matrix (direct dependency matrix). Its components
represent direct edge weights of observed interactions. Choosing top direct interactions (a cut-off) depends on the application and
is not implemented in this code.
}
\description{
This function can suit for non-square matrix
}
\details{
Feizi, S.;  Marbach, D.;  Médard, M.; Kellis, M., Network deconvolution as a general method to distinguish direct dependencies in networks. Nature Biotechnology 2013, 31, 726–733.
}
\examples{
aa <- matrix(1:12, nrow=3)
ND_regulatory(aa)
}
