% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ND.R
\name{ND}
\alias{ND}
\title{Network Deconvolution}
\usage{
ND(
  mat,
  beta = 0.99,
  alpha = 1,
  control = FALSE,
  linear_mapping_before = TRUE,
  linear_mapping_after = TRUE
)
}
\arguments{
\item{mat}{Input matrix, if it is a square matrix, the program assumes Input matrix,
if it is a square matrix, the program assumes between nodes i and j. Elements of matrix should be
non-negative.}

\item{beta}{Scaling parameter, the program maps the largest absolute eigenvalue
Scaling parameter, the program maps the largest absolute eigenvalue between 0 and 1.}

\item{alpha}{fraction of edges of the observed dependency matrix to be kept in deconvolution process.}

\item{control}{If FALSE, displaying direct weights for observed interactions, if 1, displaying direct
weights for both observed and non-observed interactions.}

\item{linear_mapping_before}{If TRUE, mat will be linearly mapped to be between 0 and 1 before deconvolution.}

\item{linear_mapping_after}{If TRUE, result will be linearly mapped to be between 0 and 1 after deconvolution.}
}
\value{
mat_nd, Output deconvolved matrix (direct dependency matrix). Its components
represent direct edge weights of observed interactions. Choosing top direct interactions (a cut-off) depends on the application and
is not implemented in this code.
}
\description{
Clean up a network adjacency matrix, filter the false-positive edges.
}
\details{
Feizi, S.;  Marbach, D.;  Médard, M.; Kellis, M., Network deconvolution as a general method to distinguish direct dependencies in networks. Nature Biotechnology 2013, 31, 726–733.
}
\examples{
a <- matrix(1:9, nrow = 3)
ND(a)

}
